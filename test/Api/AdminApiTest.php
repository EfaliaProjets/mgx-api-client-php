<?php
/**
 * AdminApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MGX
 *
 * MultiGest version 10
 *
 * The version of the OpenAPI document: canari-11
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AdminApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AdminApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for activerRechercheDansContenuPourUnGabaritDeDocument
     *
     * Activer/désactiver la recherche dans le contenu des documents du gabarit de document.
     *
     */
    public function testActiverRechercheDansContenuPourUnGabaritDeDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for activerRechercheDansContenuPourUneBannette
     *
     * Activer/désactiver la recherche dans le contenu des documents d'une bannette.
     *
     */
    public function testActiverRechercheDansContenuPourUneBannette()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for activerUtilisateur
     *
     * Activation et désactivation d'un utilisateur.
     *
     */
    public function testActiverUtilisateur()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for activerVersionnementGabaritDocument
     *
     * Activer/désactiver le versionnement des binaires d'un document.
     *
     */
    public function testActiverVersionnementGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ajouterMetadonneeGabaritDocument
     *
     * Ajout d'une nouvelle métadonnée au gabarit de document.
     *
     */
    public function testAjouterMetadonneeGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ajouterMetadonneeGabaritDossier
     *
     * Ajout d'une nouvelle métadonnée au gabarit de dossier.
     *
     */
    public function testAjouterMetadonneeGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ajouterValeurFiltreAcces
     *
     * Ajouter une valeur à un filtre d'accès.
     *
     */
    public function testAjouterValeurFiltreAcces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appliquerFiltreAccesHabilitationGabaritDeDossier
     *
     * Application d'un filtre d'accès sur l'habilitation d'un gabarit de dossier.
     *
     */
    public function testAppliquerFiltreAccesHabilitationGabaritDeDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appliquerHabilitationsArmoire
     *
     * Application des habilitations d'une armoire.
     *
     */
    public function testAppliquerHabilitationsArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appliquerHabilitationsBannettes
     *
     * Application des habilitations sur les bannettes.
     *
     */
    public function testAppliquerHabilitationsBannettes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for archiveBaseDonnees
     *
     * Sauvegarde de la base de données.
     *
     */
    public function testArchiveBaseDonnees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for archiveFichiers
     *
     * Sauvegarde des fichiers.
     *
     */
    public function testArchiveFichiers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerArmoiresRole
     *
     * Associer des armoires à un rôle.
     *
     */
    public function testAssocierArmoiresRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerFiltreAccesGabaritDeDossier
     *
     * Associer un filtre d'accès à un gabarit de dossier.
     *
     */
    public function testAssocierFiltreAccesGabaritDeDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerProcessusGabaritDeDocument
     *
     * Associer un processus à un gabarit de document.
     *
     */
    public function testAssocierProcessusGabaritDeDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerRolesArmoire
     *
     * Associer des rôles à une armoire.
     *
     */
    public function testAssocierRolesArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerUtilisateursRole
     *
     * Associer des utilisateurs à un rôle.
     *
     */
    public function testAssocierUtilisateursRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerArmoire
     *
     * Créer une armoire.
     *
     */
    public function testCreerArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerBannette
     *
     * Créer une bannette.
     *
     */
    public function testCreerBannette()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerCategorieGabaritDocument
     *
     * Créer une catégorie de gabarits de document dans un gabarit de dossier.
     *
     */
    public function testCreerCategorieGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerFiltreAcces
     *
     * Créer un filtre d'accès.
     *
     */
    public function testCreerFiltreAcces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerGabaritDocumentArmoire
     *
     * Créer un gabarit de document dans une armoire.
     *
     */
    public function testCreerGabaritDocumentArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerGabaritDocumentCategorie
     *
     * Créer un gabarit de document dans une catégorie.
     *
     */
    public function testCreerGabaritDocumentCategorie()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerGabaritDocumentGabaritDossier
     *
     * Créer un gabarit de document dans un gabarit de dossier.
     *
     */
    public function testCreerGabaritDocumentGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerGabaritDossierArmoire
     *
     * Créer un gabarit de dossier dans une armoire.
     *
     */
    public function testCreerGabaritDossierArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerLienGabaritDossier
     *
     * Création d'un lien vers un autre gabarit de dossier.
     *
     */
    public function testCreerLienGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerProcessus
     *
     * Créer un processus.
     *
     */
    public function testCreerProcessus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerRole
     *
     * Créer un rôle.
     *
     */
    public function testCreerRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerUtilisateur
     *
     * Créer un utilisateur.
     *
     */
    public function testCreerUtilisateur()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for desactiverValeurFiltreAcces
     *
     * Désactiver une valeur d'un filtre d'accès.
     *
     */
    public function testDesactiverValeurFiltreAcces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierArmoiresRole
     *
     * Dissocier des armoires d'un rôle.
     *
     */
    public function testDissocierArmoiresRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierFiltreAccesGabaritDeDossier
     *
     * Dissocier un filtre d'accès d'un gabarit de dossier.
     *
     */
    public function testDissocierFiltreAccesGabaritDeDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierProcessusGabaritDeDocument
     *
     * Dissocier un processus d'un gabarit de document.
     *
     */
    public function testDissocierProcessusGabaritDeDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierRolesArmoire
     *
     * Dissocier des rôles d'une armoire.
     *
     */
    public function testDissocierRolesArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierUtilisateursRole
     *
     * Dissocier des utilisateurs d'un rôle.
     *
     */
    public function testDissocierUtilisateursRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for etatLdap
     *
     * Récupérer l'état de la connexion au ldap.
     *
     */
    public function testEtatLdap()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for etatMGLogin
     *
     * Récupérer l'état de la connexion à MGLogin.
     *
     */
    public function testEtatMGLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for filtresAcces
     *
     * Lister les filtres d'accès.
     *
     */
    public function testFiltresAcces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for habilitationsArmoire
     *
     * Lister les habilitations d'une armoire.
     *
     */
    public function testHabilitationsArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for habilitationsBannettes
     *
     * Lister les habilitations des bannettes.
     *
     */
    public function testHabilitationsBannettes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for journalFonctionnel
     *
     * Lister les entrées du journal fonctionnel.
     *
     */
    public function testJournalFonctionnel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for journalTaches
     *
     * Liste des entrées du journal des tâches traitées en asynchrone.
     *
     */
    public function testJournalTaches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for miseAJour
     *
     * Lance la mise à jour automatique de l'application.
     *
     */
    public function testMiseAJour()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierArmoire
     *
     * Mise à jour de l'armoire.
     *
     */
    public function testModifierArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierBannette
     *
     * Mise à jour de la bannette.
     *
     */
    public function testModifierBannette()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierGabaritDocument
     *
     * Modifier un gabarit de document.
     *
     */
    public function testModifierGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierLienGabaritDossier
     *
     * Modifier un lien vers un gabarit de dossier.
     *
     */
    public function testModifierLienGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierMetadonneeGabaritDocument
     *
     * Modification d'une métadonnée d'un gabarit de document.
     *
     */
    public function testModifierMetadonneeGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierMetadonneeGabaritDossier
     *
     * Modification d'une métadonnée d'un gabarit de dossier.
     *
     */
    public function testModifierMetadonneeGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierModeleNomDynamiqueGabaritDocument
     *
     * Modifier le modèle de nom dynamique d'un gabarit de document.
     *
     */
    public function testModifierModeleNomDynamiqueGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierModeleNomDynamiqueGabaritDossier
     *
     * Modifier le modèle de nom dynamique d'un gabarit de dossier.
     *
     */
    public function testModifierModeleNomDynamiqueGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierMotDePasse
     *
     * Modifier le mot de passe d'un utilisateur.
     *
     */
    public function testModifierMotDePasse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierProcessus
     *
     * Modifier un processus.
     *
     */
    public function testModifierProcessus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierRole
     *
     * Modification d'un rôle.
     *
     */
    public function testModifierRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierUtilisateur
     *
     * Modification d'un utilisateur.
     *
     */
    public function testModifierUtilisateur()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processus
     *
     * Lister les processus.
     *
     */
    public function testProcessus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for renommerCategorieGabaritDocument
     *
     * Renommer une catégorie de gabarits de document.
     *
     */
    public function testRenommerCategorieGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for renommerFiltreAcces
     *
     * Renommer un filtre d'accès.
     *
     */
    public function testRenommerFiltreAcces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for renommerGabaritDossier
     *
     * Renommer un gabarit de dossier.
     *
     */
    public function testRenommerGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for renommerValeurFiltreAcces
     *
     * Renommer une valeur d'un filtre d'accès.
     *
     */
    public function testRenommerValeurFiltreAcces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for roles
     *
     * Liste des rôles.
     *
     */
    public function testRoles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for selectionnerFiltresAccesUtilisateur
     *
     * Sélectionner une valeur d'un filtre d'accès à un utilisateur.
     *
     */
    public function testSelectionnerFiltresAccesUtilisateur()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerArmoire
     *
     * Suppression d'une armoire.
     *
     */
    public function testSupprimerArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerBannette
     *
     * Supprimer une bannette.
     *
     */
    public function testSupprimerBannette()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerCategorieGabaritDocument
     *
     * Supprimer une catégorie de gabarits de document.
     *
     */
    public function testSupprimerCategorieGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerFiltre
     *
     * Suppression d'un filtre d'accès.
     *
     */
    public function testSupprimerFiltre()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerFiltreAccesHabilitationGabaritDeDossier
     *
     * Supprimer le filtre d'accès sur l'habilitation d'un gabarit de dossier.
     *
     */
    public function testSupprimerFiltreAccesHabilitationGabaritDeDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerGabaritDocument
     *
     * Supprimer un gabarit de document.
     *
     */
    public function testSupprimerGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerGabaritDossier
     *
     * Supprimer un gabarit de dossier.
     *
     */
    public function testSupprimerGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerLienGabaritDossier
     *
     * Supprimer un lien vers un gabarit de dossier.
     *
     */
    public function testSupprimerLienGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerMetadonneeGabaritDocument
     *
     * Suppression d'une métadonnée d'un gabarit de document.
     *
     */
    public function testSupprimerMetadonneeGabaritDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerMetadonneeGabaritDossier
     *
     * Suppression d'une métadonnée d'un gabarit de dossier.
     *
     */
    public function testSupprimerMetadonneeGabaritDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerProcessus
     *
     * Suppression d'un processus.
     *
     */
    public function testSupprimerProcessus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerRole
     *
     * Suppression d'un rôle.
     *
     */
    public function testSupprimerRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerUtilisateur
     *
     * Suppression d'un utilisateur.
     *
     */
    public function testSupprimerUtilisateur()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for synchroniserLdap
     *
     * Synchroniser les utilisateurs du ldap.
     *
     */
    public function testSynchroniserLdap()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for synchroniserMGLogin
     *
     * Synchroniser les utilisateurs de MGLogin.
     *
     */
    public function testSynchroniserMGLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for utilisateurs
     *
     * Lister les utilisateurs.
     *
     */
    public function testUtilisateurs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
