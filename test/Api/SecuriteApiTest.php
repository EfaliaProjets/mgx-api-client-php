<?php
/**
 * SecuriteApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MGX
 *
 * MultiGest version 10
 *
 * The version of the OpenAPI document: canari-11
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SecuriteApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SecuriteApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for appliquerFiltreAccesHabilitationGabaritDeDossier
     *
     * Application d'un filtre d'accès sur l'habilitation d'un gabarit de dossier.
     *
     */
    public function testAppliquerFiltreAccesHabilitationGabaritDeDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appliquerHabilitationsArmoire
     *
     * Application des habilitations d'une armoire.
     *
     */
    public function testAppliquerHabilitationsArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appliquerHabilitationsBannettes
     *
     * Application des habilitations sur les bannettes.
     *
     */
    public function testAppliquerHabilitationsBannettes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerArmoiresRole
     *
     * Associer des armoires à un rôle.
     *
     */
    public function testAssocierArmoiresRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerRolesArmoire
     *
     * Associer des rôles à une armoire.
     *
     */
    public function testAssocierRolesArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for associerUtilisateursRole
     *
     * Associer des utilisateurs à un rôle.
     *
     */
    public function testAssocierUtilisateursRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerJWT
     *
     * Créer un JWT.
     *
     */
    public function testCreerJWT()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creerRole
     *
     * Créer un rôle.
     *
     */
    public function testCreerRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deconnecter
     *
     * Déconnecter l'utilisateur.
     *
     */
    public function testDeconnecter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierArmoiresRole
     *
     * Dissocier des armoires d'un rôle.
     *
     */
    public function testDissocierArmoiresRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierRolesArmoire
     *
     * Dissocier des rôles d'une armoire.
     *
     */
    public function testDissocierRolesArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dissocierUtilisateursRole
     *
     * Dissocier des utilisateurs d'un rôle.
     *
     */
    public function testDissocierUtilisateursRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for habilitationsArmoire
     *
     * Lister les habilitations d'une armoire.
     *
     */
    public function testHabilitationsArmoire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for habilitationsBannettes
     *
     * Lister les habilitations des bannettes.
     *
     */
    public function testHabilitationsBannettes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifierRole
     *
     * Modification d'un rôle.
     *
     */
    public function testModifierRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for roles
     *
     * Liste des rôles.
     *
     */
    public function testRoles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerFiltreAccesHabilitationGabaritDeDossier
     *
     * Supprimer le filtre d'accès sur l'habilitation d'un gabarit de dossier.
     *
     */
    public function testSupprimerFiltreAccesHabilitationGabaritDeDossier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for supprimerRole
     *
     * Suppression d'un rôle.
     *
     */
    public function testSupprimerRole()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
